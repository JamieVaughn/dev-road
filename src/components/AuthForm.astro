---
interface Props {
  action: string
  title: string;
  reset?: boolean;
}
const { action, title, reset } = Astro.props;
---

<article>
  <div>
    <hgroup>
      <h1>{title}</h1><span>to access to the course content.</span>
    </hgroup>
    <slot />
    <form action={action} method="post">
      <label for="email">Email</label>
      <input
        type="text"
        name="email"
        id="email"
        placeholder="Email"
        aria-label="Email"
        autocomplete="email"
        required
        pattern="[^@\s]+@[^@\s]+\.[^@\s]+"
      />
      <label for="password">Password</label>
      <input
        type="password"
        id="password"
        name="password"
        placeholder="Password"
        aria-label="Password"
        autocomplete="current-password"
        required
      />
      <button type="submit" class="contrast">{title}</button>
    </form>
    {reset && <a href="/reset">Reset Password</a>}
  </div>
</article>

<style>
  hgroup {
    display: flex;
    align-items: baseline;
    gap: 1em;
  }
  article {
    margin: 0 auto;
  }
  @media (min-width: 800px) {
    article {
      min-width: 600px;
      width: 50vw;
    }
  }
  a[href="/reset"] {
    margin-top: 1em;
    text-align: center;
    display: block;
  }
  #email:user-valid, #password:user-valid {
    outline: 3px solid rgb(119, 218, 161, 0.5);
  }
  #email:user-invalid, #password:user-invalid {
    outline: 3px solid crimson;
  }
  label:has(+ input:user-valid):after {
    display: inline-block;
    padding-left: 0.5em;
    content: '✓';
    color: rgb(119, 218, 161);
  }
  label:has(+ input:user-invalid):after {
    display: inline-block;
    padding-left: 0.5em;
    content: '⨯';
    color: crimson;
  }
</style>