---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../data/consts";
import ThemeIcon from "./ThemeIcon.astro";
import { Icon } from "astro-icon/components";
import MessageScript from './MessageScript.astro'
import { checkAuth} from '../lib/checkAuth'

const { cookies, redirect } = Astro

const auth = await checkAuth({cookies, redirect})
  .catch(err => console.log(err))
---

<MessageScript message={auth} enable={false}/>
<header>
  <nav>
    <ul class="logo">
      <li>
        <h2>
          <a href="/">
            <Icon name="mountain_road" size={45} />
            {
              SITE_TITLE.split(" ").map((word) => (
                <span class="logo-text">{word}</span>
              ))
            }
          </a>
        </h2>
      </li>
    </ul>
    <ul class="feature-links desktop-only">
      <HeaderLink href="/syllabus">Syllabus</HeaderLink>
      {
        auth?.user?.email && (
          <>
            <HeaderLink href="/class/calendar">Calendar</HeaderLink>
            <HeaderLink href="/class/slides">Slides</HeaderLink>
            <HeaderLink href="/class/quiz">Quiz</HeaderLink>
            <HeaderLink href="/class/progress">Progress</HeaderLink>
          </>
        )
      }
    </ul>
    <ul class="feature-links mobile-only">
      <details role="list" dir="rtl" style="text-align: center;">
        <summary aria-haspopup="listbox" role="link">Menu</summary>
        <ul role="listbox">
          <HeaderLink href="/syllabus">Syllabus</HeaderLink>
          {
            auth?.user?.email ? (
              <>
                <HeaderLink href="/class/calendar">Calendar</HeaderLink>
                <HeaderLink href="/class/slides">Slides</HeaderLink>
                <HeaderLink href="/class/quiz">Quiz</HeaderLink>
                <HeaderLink href="/class/progress">Progress</HeaderLink>
                <HeaderLink href="/class/profile" style="display: flex; flex-direction: row-reverse; gap: 0.5em;">
                  <Icon name="profile" size={24} title="Profile"/> <span>Profile</span>
                </HeaderLink>
                <HeaderLink href="/api/auth/signout">Log out</HeaderLink>
              </>
            ) : (
              <>
                <HeaderLink href="/signup">Sign Up</HeaderLink>
                <HeaderLink href="/login">Log In</HeaderLink>
              </>
            )
          }
        </ul>
      </details>
    </ul>
    <ul class="auth-controls desktop-only">
      {
        auth?.user?.email ? (
          <>
            <HeaderLink href="/class/profile">
              <Icon name="profile" size={24} />
            </HeaderLink>
            <li>
              <form action="/api/auth/signout" method="get">
                <button type="submit" class="ghost medium">
                  Log out
                </button>
              </form>
            </li>
          </>
        ) : (
          <>
            <li>
              <a href="/signup" role="button">
                Sign Up
              </a>
            </li>
            <li>
              <a href="/login" role="button" class="ghost">
                Log In
              </a>
            </li>
          </>
        )
      }
    </ul>
    <ul>
      <li>
        <ThemeIcon />
      </li>
    </ul>
  </nav>
</header>

<style>
  header {
    position: sticky;
    top: 0;
    margin: 0;
    padding: 0.5em 1em 0;
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
    z-index: 99;
    background-color: var(--background-color);
  }
  html[data-theme="dark"] header {
    box-shadow: 0 -2px 8px rgba(255, 255, 255, 0.15);
  }

  h2 {
    margin: 0;
    font-size: 1em;
  }

  h2 a,
  h2 a.active {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    align-content: center;
    justify-content: center;
    gap: 0 4px;
    text-decoration: none;
  }

  .logo svg {
    grid-row: 1 / span 2;
  }
  nav {
    justify-content: end;
    gap: 2em;
    height: 60px;
  }
  nav a:not(a[role="button"]) {
    border-bottom: 5px solid transparent;
    text-decoration: none;
  }
  nav a.active:not(a[role="button"]) {
    text-decoration: none;
    border-bottom-color: var(--primary);
  }
  nav li {
    padding: 0.25em;
  }
  .logo {
    margin-right: auto;
  }
  html[data-theme="light"] .logo-text {
    color: var(--dark);
  }
  html[data-theme="dark"] .feature-links a {
    color: white;
  }
  html[data-theme="light"] .feature-links a {
    color: var(--extra-dark);
  }
  .feature-links.desktop-only {
    display: flex;
    gap: 4px;
  }
  .feature-links.mobile-only {
    display: none;
  }
  @media (max-width: 800px) {
    .feature-links.mobile-only {
      display: block;
      align-self: center;
    }
    .feature-links.desktop-only {
      display: none;
    }
    .auth-controls {
      display: none !important;
    }
    nav {
      gap: 2em;
    }
  }
  a[role="button"] {
    height: 52px;
  }
  .auth-controls {
    display: flex;
    gap: 8px;
  }
  .auth-controls a,
  .auth-controls button {
    white-space: nowrap;
    margin: 0 4px;
  }
  .auth-controls form {
    margin: 0;
  }
</style>
