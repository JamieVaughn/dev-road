---
import Home from "../../layouts/Home.astro";
import { checkAuth } from "../../lib/checkAuth";
import { supabase } from "../../lib/supabase";

const { cookies, redirect } = Astro;

const auth = await checkAuth({ cookies, redirect })
  .then((data) => data)
  .catch((err) => console.log(err))

const email = auth.user.email;

const { data: profile, error } = await supabase
  .from("profile")
  .select()
  .eq("email", email)
  .single();

const name = profile.first_name || profile.last_name ? `${profile.first_name} ${profile.last_name}` : null;
const user = name ?? email.split("@")[0];

---

<Home>
  <hgroup class="center">
    <h1>My Profile</h1>
    <form action="/api/auth/signout" method="get">
      <button type="submit" class="ghost medium not-you"
        >Not You? Click here</button
      >
    </form>
    {error && <p class="error">There was an error finding your profile: {error.message}</p>}
  </hgroup>
  <article>
    <div style="flex: 0 2 40vw; text-align: center;">
      <img
        src=`https://api.dicebear.com/7.x/thumbs/svg?seed=${user}`
        alt="avatar"
        style="max-height: 300px;"
        onload="(e => e.target.dataset.loaded=true)(event)"
      />
      <article aria-busy="true" style="height: 300px" />
    </div>
    <div>
      <h2>{user}</h2>
      <div class="email-info">
        <h6>Email:</h6>
        <p class="muted">{email}</p>
        <p class="badge">
          {
            auth?.user?.identities[0].identity_data.email_verified
              ? "verified"
              : "unverified"
          }
        </p>
      </div>
      <p>
        Confirmed at: <span class="muted"
          >{new Date(auth?.user?.email_confirmed_at).toLocaleString()}</span
        >
      </p>
      <p>
        Joined: <span class="muted"
          >{new Date(auth?.user?.created_at).toLocaleString()}</span
        >
      </p>
      <p>
        Last log in: <span class="muted"
          >{new Date(auth?.user?.last_sign_in_at).toLocaleString()}</span
        >
      </p>
    </div>
  </article>
  <article class="start">
    <div>
      <h2>Additional Info</h2>
      <p>
        Feel free to add your name, 
        <span class="mobile-only">account URLs and hobbies</span>
        <span class="desktop-only">LinkedIn Account URL, Freecodecamp URL & Discord ID </span> 
        to your profile! 
        <span class="desktop-only">Also tell us about some of your hobbies and interests,
        so class project topics can be personalized for you!</span>
      </p>
    </div>
    <form action="/api/auth/profile" method="post">
      <input type="hidden" id="email" name="email" value={email} required />
      <div class="flex">
        <input
          type="text"
          id="firstname"
          name="firstname"
          placeholder="First Name"
          value={profile?.first_name}
        />
        <input
          type="text"
          id="lastname"
          name="lastname"
          placeholder="Last Name"
          value={profile?.last_name}
        />
      </div>
      <input
        type="text"
        id="fcc"
        name="fcc"
        placeholder="Freecodecamp Profile URL"
        value={profile?.fcc_id}
      />
      <div class="flex">
        <input
          type="text"
          id="linkedin"
          name="linkedin"
          placeholder="LinkedIn Profile URL"
          value={profile?.linkedin_id}
        />
        <input
          type="text"
          id="discord"
          name="discord"
          placeholder="Discord Username"
          value={profile?.discord_id}
        />
      </div>
      <textarea
        name="hobbies"
        id="hobbies"
        name="hobbies"
        placeholder="Your Hobbies & Interests"
        cols="30"
        rows="4"
      >
        {profile?.hobbies ?? ""}
      </textarea>
      <button type="submit" disabled={!email}
        >{email ? "Submit" : "We could not authenticate you"}</button
      >
    </form>
  </article>
  {
    profile?.discord_id && (
      <article>
        <iframe
          src={`https://discord.com/widget?id=831668785274421300&theme=dark&username=${profile?.discord_id}`}
          width="100%"
          height="500"
          allowtransparency="true"
          sandbox="allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"
        />
      </article>
    )
  }
</Home>

<style>
  .not-you {
    max-width: 200px;
    margin-inline: auto;
  }
  .error {
    color: crimson; 
    font-size: 0.5em;
  }
  .email-info {
    display: flex;
    gap: 0.5em;
    align-items: center;
    margin-bottom: 1em;
  }
  .email-info > * {
    margin: 0;
  }
  .badge {
    font-size: 0.5em;
    border-radius: 5em;
    padding: 0.25em 0.5em;
    background-color: var(--navy);
    color: white;
  }
  .muted {
    color: var(--gray-4);
  }
  article.start {
    display: flex;
    text-align: right;
    align-items: start;
  }
  article.start > div:first-of-type {
    flex: 0 2 36%;
  }
  article.start h2 {
    white-space: nowrap;
  }
  article.start > form {
    flex-grow: 1;
  }
  article.start > form input::placeholder {
    color: var(--tan);
  }
  .flex {
    display: flex;
    gap: 1em;
  }
  @media (max-width: 800px) {
    .flex {
      display: contents;
    }
    article.start {
      flex-direction: column;
      text-align: left;
    }
    article.start > form {
      margin: 0 auto;
    }
  }
  @media (min-width: 800px) {
    article {
      display: flex;
      gap: 3em;
      align-items: center;
      justify-content: center;
      margin: 2em auto;
    }
  }
</style>
