---
import Home from "../layouts/Home.astro";
import { checkAuth } from "../lib/checkAuth";
import { supabase } from "../lib/supabase";
import MessageScript from "../components/MessageScript.astro";

const { cookies, redirect } = Astro;

const auth = await checkAuth({ cookies, redirect })
  .then((data) => data)
  .catch((err) => console.log(err));

const email = auth.user.email
const _user_id = auth.user.user_id
const user = email.split('@')[0]

const { data: profile, error } = await supabase
  .from("profile")
  .select("*")
  .eq("email", email)
  .single();
---

<MessageScript message={{email, profile, error}} />
<Home>
  <div>
    <hgroup class="center">
      <h1>My Profile</h1>
      <form action="/api/auth/signout" method="get">
        <button type="submit" class="ghost medium not-you"
          >Not You? Click here</button
        >
      </form>
    </hgroup>
    <article>
      <div style="flex: 0 2 40vw; text-align: center;">
        <img
          src=`https://api.dicebear.com/7.x/thumbs/svg?seed=${user}`
          alt="avatar"
          style="max-height: 300px;"
        />
      </div>
      <div>
        <h2>{user}</h2>
        <div class="email-info">
          <h6>Email:</h6>
          <p class="muted">{email}</p>
          <p class="badge">
            {
              auth?.user?.identities[0].identity_data.email_verified
                ? "verified"
                : "unverified"
            }
          </p>
        </div>
        <p>
          Confirmed at: <span class="muted"
            >{new Date(auth?.user?.email_confirmed_at).toLocaleString()}</span>
        </p>
        <p>
          Joined: <span class="muted"
            >{new Date(auth?.user?.created_at).toLocaleString()}</span>
        </p>
        <p>
          Last log in: <span class="muted"
            >{new Date(auth?.user?.last_sign_in_at).toLocaleString()}</span>
        </p>
      </div>
    </article>
    <article class="start">
      <div>
        <h2>Additional Info</h2>
        <p>
          Feel free to add your name and LinkedIn Account URL to your profile!
          Also tell us about some of your hobbies and interests, so class
          project topics can be personalized for you!
        </p>
      </div>
      <form action="/api/auth/profile" method="post">
        <input
          type="hidden"
          id="email"
          name="email"
          value={email}
        />
        <div class="flex">
          <input
            type="text"
            id="firstname"
            name="firstname"
            placeholder="First Name"
            value={profile?.first_name}
          />
          <input
            type="text"
            id="lastname"
            name="lastname"
            placeholder="Last Name"
            value={profile?.last_name}
          />
        </div>
        <input
          type="text"
          id="fcc"
          name="fcc"
          placeholder="Freecodecamp Profile URL"
          value={profile?.fcc_id}
        />
        <div class="flex">
          <input
            type="text"
            id="linkedin"
            name="linkedin"
            placeholder="LinkedIn Profile URL"
            value={profile?.linkedin_id}
          />
          <input
            type="text"
            id="discord"
            name="discord"
            placeholder="Discord Username"
            value={profile?.discord_id}
          />
        </div>
        <textarea
          name="hobbies"
          id="hobbies"
          name="hobbies"
          placeholder="Your Hobbies & Interests"
          cols="30"
          rows="6"
          value={profile?.hobbies}></textarea>
        <button type="submit">Submit</button>
      </form>
    </article>
    <article>
      <iframe
        src="https://discord.com/widget?id=831668785274421300&theme=dark"
        width="100%"
        height="500"
        allowtransparency="true"
        sandbox="allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"
      ></iframe>
    </article>
  </div>
</Home>

<style>
  .not-you {
    max-width: 200px;
    margin-inline: auto;
  }
  .email-info {
    display: flex;
    gap: 0.5em;
    align-items: center;
    margin-bottom: 1em;
  }
  .email-info > * {
    margin: 0;
  }
  .badge {
    font-size: 0.5em;
    border-radius: 5em;
    padding: 0.25em 0.5em;
    background-color: var(--navy);
    color: white;
  }
  .muted {
    color: var(--gray-4);
  }
  .flex {
    display: flex;
    gap: 1em;
  }
  article {
    display: flex;
    gap: 3em;
    align-items: center;
    justify-content: center;
  }
  article.start {
    text-align: right;
    align-items: start;
  }
  article.start > div:first-of-type {
    flex: 0 2 30%;
  }
  article.start > form {
    flex-grow: 1;
  }
</style>
